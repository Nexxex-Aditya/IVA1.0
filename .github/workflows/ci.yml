name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install ruff black mypy
    
    - name: Run ruff
      run: ruff check src/ tests/ scripts/ notebooks/
    
    - name: Run black
      run: black --check src/ tests/ scripts/ notebooks/
    
    - name: Run mypy
      run: mypy src/

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests (CPU only)
      run: |
        pytest tests/ -v --tb=short -m "not gpu and not triton"
    
    - name: Run kernel unit tests (shape checks only)
      run: |
        python -c "
        import sys
        sys.path.append('src')
        from kernels_t import attention_triton, rmsnorm_triton
        print('Kernel imports successful')
        "

  gpu-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install CUDA dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
        pip install triton
        pip install -r requirements.txt
    
    - name: Run GPU tests
      run: |
        pytest tests/ -v -m "gpu or triton" --tb=short
      env:
        CUDA_VISIBLE_DEVICES: 0

  build:
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
